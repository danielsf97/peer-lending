%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.4.0

-ifndef(protos_pb).
-define(protos_pb, true).

-define(protos_pb_gpb_version, "4.4.0").

-ifndef('MESSAGEWRAPPER_PB_H').
-define('MESSAGEWRAPPER_PB_H', true).
-record('MessageWrapper',
        {msgType                :: 'SYNC' | 'ASYNC' | integer(), % = 1, enum MessageWrapper.MessageType
         clientSession          :: iodata() | undefined, % = 2
         inner_message          :: {loginreq, protos_pb:'LoginReq'()} | {loginresp, protos_pb:'LoginResp'()} | {logoutreq, protos_pb:'LogoutReq'()} | {logoutresp, protos_pb:'LogoutResp'()} | {companyactionreq, protos_pb:'CompanyActionReq'()} | {companyactionresp, protos_pb:'CompanyActionResp'()} | {investoractionreq, protos_pb:'InvestorActionReq'()} | {investoractionresp, protos_pb:'InvestorActionResp'()} | {errormsg, protos_pb:'ErrorMsg'()} | {emissionfixedratereq, protos_pb:'EmissionFixedRateReq'()} | {emissionfixedrateresp, protos_pb:'EmissionFixedRateResp'()} | {auctionemissionresult, protos_pb:'AuctionEmissionResult'()} | undefined % oneof
        }).
-endif.

-ifndef('EMISSIONFIXEDRATEREQ_PB_H').
-define('EMISSIONFIXEDRATEREQ_PB_H', true).
-record('EmissionFixedRateReq',
        {client                 :: iodata()         % = 1
        }).
-endif.

-ifndef('EMISSIONFIXEDRATERESP_PB_H').
-define('EMISSIONFIXEDRATERESP_PB_H', true).
-record('EmissionFixedRateResp',
        {client                 :: iodata(),        % = 1
         rate                   :: float() | integer() | infinity | '-infinity' | nan % = 2
        }).
-endif.

-ifndef('AUCTIONEMISSIONRESULT_PB_H').
-define('AUCTIONEMISSIONRESULT_PB_H', true).
-record('AuctionEmissionResult',
        {client                 :: iodata(),        % = 1
         msg                    :: iodata()         % = 2
        }).
-endif.

-ifndef('ERRORMSG_PB_H').
-define('ERRORMSG_PB_H', true).
-record('ErrorMsg',
        {error                  :: iodata()         % = 1
        }).
-endif.

-ifndef('LOGINREQ_PB_H').
-define('LOGINREQ_PB_H', true).
-record('LoginReq',
        {name                   :: iodata(),        % = 1
         password               :: iodata()         % = 2
        }).
-endif.

-ifndef('LOGINRESP_PB_H').
-define('LOGINRESP_PB_H', true).
-record('LoginResp',
        {cType                  :: 'COMPANY' | 'INVESTOR' | integer() | undefined, % = 1, enum LoginResp.ClientType
         status                 :: 'INVALID' | 'SUCCESS' | integer() % = 2, enum LoginResp.Status
        }).
-endif.

-ifndef('LOGOUTREQ_PB_H').
-define('LOGOUTREQ_PB_H', true).
-record('LogoutReq',
        {name                   :: iodata()         % = 1
        }).
-endif.

-ifndef('LOGOUTRESP_PB_H').
-define('LOGOUTRESP_PB_H', true).
-record('LogoutResp',
        {status                 :: 'ERROR' | 'SUCCESS' | integer() % = 1, enum LogoutResp.Status
        }).
-endif.

-ifndef('COMPANYACTIONREQ_PB_H').
-define('COMPANYACTIONREQ_PB_H', true).
-record('CompanyActionReq',
        {client                 :: iodata(),        % = 1
         reqType                :: 'AUCTION' | 'EMISSION' | integer(), % = 2, enum CompanyActionReq.RequestType
         value                  :: integer(),       % = 3, 32 bits
         max_rate               :: float() | integer() | infinity | '-infinity' | nan % = 4
        }).
-endif.

-ifndef('COMPANYACTIONRESP_PB_H').
-define('COMPANYACTIONRESP_PB_H', true).
-record('CompanyActionResp',
        {client                 :: iodata(),        % = 1
         status                 :: 'SUCCESS' | 'INVALID' | integer() % = 2, enum CompanyActionResp.Status
        }).
-endif.

-ifndef('INVESTORACTIONREQ_PB_H').
-define('INVESTORACTIONREQ_PB_H', true).
-record('InvestorActionReq',
        {client                 :: iodata(),        % = 1
         company                :: iodata(),        % = 2
         req_type               :: 'AUCTION' | 'EMISSION' | integer(), % = 3, enum InvestorActionReq.RequestType
         value                  :: integer(),       % = 4, 32 bits
         rate                   :: float() | integer() | infinity | '-infinity' | nan | undefined % = 5
        }).
-endif.

-ifndef('INVESTORACTIONRESP_PB_H').
-define('INVESTORACTIONRESP_PB_H', true).
-record('InvestorActionResp',
        {client                 :: iodata(),        % = 1
         status                 :: 'CONFIRMED' | 'REPLACED' | 'ENDED' | 'INVALID' | integer() % = 2, enum InvestorActionResp.Status
        }).
-endif.

-endif.
