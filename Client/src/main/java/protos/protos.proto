syntax = "proto2";

message MessageWrapper {
    enum MessageType{
        SYNC = 0;
        ASYNC = 1;
    }

    required MessageType msgType = 1;

    oneof inner_message {
        LoginReq loginreq = 2;
        LoginResp loginresp = 3;
        LogoutReq logoutreq = 4;
        LogoutResp logoutresp = 5;
        CompanyActionReq companyactionreq = 6;
        CompanyActionResp companyactionresp = 7;
        InvestorActionReq investoractionreq = 8;
        InvestorActionResp investoractionresp = 9;
        ErrorMsg errormsg = 10;
        AuctionEmissionResult auctionemissionresult = 11;
    }
}

message AuctionEmissionResult{
    required string client = 1;
    required string msg = 2;
}

message ErrorMsg{
    required string error = 1;
}


message LoginReq {
    required string name = 1;
    required string password = 2;
}

message LoginResp {

    enum ClientType{
        COMPANY = 0;
        INVESTOR = 1;
    }

    enum Status {
        INVALID = 0;
        SUCCESS = 1;
    }

    optional ClientType cType = 1;
    required Status status = 2;
}

message LogoutReq {
    required string name = 1;
}

message LogoutResp {

    enum Status {
        ERROR = 0;
        SUCCESS = 1;
    }

    required Status status = 1;
}

message CompanyActionReq {
    enum RequestType {
        AUCTION = 0;
        EMISSION = 1;
    }

    required string client = 1;
    required RequestType reqType = 2;
    required int64 value = 3;
    optional float max_rate = 4;
}

message CompanyActionResp{
    enum Status {
        SUCCESS = 0;
        INVALID = 1;
    }

    required string client = 1;
    required Status status = 2;
}

message InvestorActionReq{
    enum RequestType {
        AUCTION = 0;
        EMISSION = 1;
    }

    required string client = 1;
    required string company = 2;
    required RequestType req_type = 3;
    required int64 value = 4;
    optional float rate = 5;
}

message InvestorActionResp{
    enum Status {
        CONFIRMED = 0;
        REPLACED = 1;   //apenas no caso dos leilões
        ENDED = 2;      //se o leilão ou a emissão terminaram
        INVALID = 3;    //dados inválidos
    }

    required string client = 1;
    required Status status = 2;
}